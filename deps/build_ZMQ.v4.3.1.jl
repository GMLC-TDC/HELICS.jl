using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libzmq"], :libzmq),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/kdheepak/ZMQBuilder/releases/download/v4.3.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-gnu-gcc4.tar.gz", "32110d26af10998d084e95d2e664aa1071fe916aff9144f5cd36f668e3d991d8"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-gnu-gcc7.tar.gz", "0ade64492d64466a9fb83c7beccf3c494734e74ed2a6421c9b755249b317402f"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-gnu-gcc8.tar.gz", "b0fc3eb8fdd9a359490cddc2bdeee89af9c162582f58028dd31ff8ee4c5abd9e"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-musl-gcc4.tar.gz", "b97edf71aa975493c791e031b8092a12bdcbc5a668a615eba885365e6c799677"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-musl-gcc7.tar.gz", "8abb6a0c7f3d6dea76cc19b5dbb49b20b5dd6f2410c201eecab2a8eb7ee09582"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.aarch64-linux-musl-gcc8.tar.gz", "7da883df0a898eb6e3f9d65b305de7f44341de8a3f2aa86721019c09659e7a4f"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-gnueabihf-gcc4.tar.gz", "6a764a07ea2a56fb4783cc46330c07f9caefa060965d7294707aca19e0a25df7"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-gnueabihf-gcc7.tar.gz", "edbcc82e6f9f1ebc4016e8e352c886195c45c97c54c7312bd366aa98bdb72078"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-gnueabihf-gcc8.tar.gz", "22cf03d9e9601c1269e5d9ae1f0b40836f2225a088d346af233ee390999e711a"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-musleabihf-gcc4.tar.gz", "a01549d9364fa4715b13c10b273e8eb3a4e3b4565d5aaed6f787358373c71f90"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-musleabihf-gcc7.tar.gz", "118c614e190c258e2bff4e4203485d82493b3722836fe57d648446557a1ed6a8"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.arm-linux-musleabihf-gcc8.tar.gz", "8526c8f3bf548333c6d31b7b520a653ff0661f0726f6fba8d18f48a68458b164"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-gnu-gcc4.tar.gz", "8bb5bf83793908aec33a2ab89b91b9e9f77822466b7dcb18a12215a0350a16ab"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-gnu-gcc7.tar.gz", "4b93e61c593c994bad3ba6ea686a737ac2d4794ac69ba057363cd61ae4944ffd"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-gnu-gcc8.tar.gz", "59d162a4327882f9f0225cbf994d6bfc70e359ec732a1aec9a9df0c2560f1242"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-musl-gcc4.tar.gz", "87f7069be7eb1965c2b2cb6abec3383cfdc9ca3d2a41ded63cb46890fdb32bd0"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-musl-gcc7.tar.gz", "0e8638dcbe602d2c05846507578479bac208bedea0f9c0507cddbe672e401914"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.i686-linux-musl-gcc8.tar.gz", "7e6a523d0be196f87905ea574b23ef826d1d3db51ec7f37876a4fe9b04e1fc60"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.i686-w64-mingw32-gcc4.tar.gz", "cd1996aaf802d4fc460e1e49477d5ffd323fd608af298305f498062c48a2e444"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.i686-w64-mingw32-gcc7.tar.gz", "f80568f2be31b2c13a2741364b5ea4335269567a34e6b71db6af3db524e4d4be"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.i686-w64-mingw32-gcc8.tar.gz", "9d4ab8fa1aabfadf8664be93bdf8d026e7a3cd05f241e0bd059a0afa620d867f"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.powerpc64le-linux-gnu-gcc4.tar.gz", "633ac5116e73378059656733401c898e42f6304e66a468f95a3433e2e0a8ad7f"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.powerpc64le-linux-gnu-gcc7.tar.gz", "a567ee80e0ea3bb98785d31d8f3a1c8868577c97433b1bbb4101921c21400b43"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.powerpc64le-linux-gnu-gcc8.tar.gz", "5387034d606384e38e093e5897792554e872a013510cecf8755566a2fea5b60a"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-apple-darwin14-gcc4.tar.gz", "3283783620ba8fc3cc67b6e820ed0684f33932a7b580f3f92db9a184a3122b5d"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-apple-darwin14-gcc7.tar.gz", "7d3130be3082d0d2d48f5693134b37ce635dc5a3cc8686e3b09e3678ae29b4d1"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-apple-darwin14-gcc8.tar.gz", "5e080d00520737d77dff8d3b5cce9cc301449bde017fdf1eb1497db7877b3723"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-gnu-gcc4.tar.gz", "a9442cb019947cfc49cec132591fb4e49b9347cfda25919babf48b1657e91f80"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-gnu-gcc7.tar.gz", "98d55b47be4d1dfea853d61ad5d32e6b85d601d7c0c94692462a6a2e459bda67"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-gnu-gcc8.tar.gz", "c111e97855ae5f21719bcda8162ce4c49dea062d8ca7ab79c59f104ecb3c4c6d"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-musl-gcc4.tar.gz", "b73c41fbd13f246b2b661837d61eeedfdf4665f25984f6f3842f4b1075d887ac"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-musl-gcc7.tar.gz", "90984e3275674235add896fb710fa1babbf083af10a2c31cc371303acfc0c548"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-linux-musl-gcc8.tar.gz", "7f34dae4e7dc65b086c5e77de74f81317d6f31bbfdf8dde45b5477b90e2c584a"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-unknown-freebsd11.1-gcc4.tar.gz", "84516762c1dac8005727e552db0952b20a332df8ab2d3a335b3db662c64a0f68"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-unknown-freebsd11.1-gcc7.tar.gz", "6dce8c5dfaeecf4e8af2deda837578e48c4da1ac55f87efac4aac3e192a4c592"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-unknown-freebsd11.1-gcc8.tar.gz", "53a74d406e607275e1494c64277554032946fe2739bc554c35615c19346b1cb3"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-w64-mingw32-gcc4.tar.gz", "9313d63adb3f2e7559c4572e29417007bf26b57b3be1b26399a7747b25f7a5fb"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-w64-mingw32-gcc7.tar.gz", "8b1bfaf639b1e0e9dc283ac85f73b27003cc87ae986d6696b4a300a1257cf3c6"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/ZMQ.v4.3.1.x86_64-w64-mingw32-gcc8.tar.gz", "15be74887936068c0bae5d75d4f146c04d3bb47e7d03c0b82a272d679b8351fc"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
